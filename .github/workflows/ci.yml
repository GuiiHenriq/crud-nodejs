name: CI - Run Tests

# Trigger
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

# Jobs
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # --- NEW: Service Containers ---
    # This starts a PostgreSQL container alongside our job
    services:
      postgres:
        image: postgres:14-alpine
        # Environment variables for the database container
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        # Health check to ensure the DB is ready before tests start
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run tests
        env:
          AMQP_URL: ${{ secrets.AMQP_URL }}
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          DATABASE_URL: 'postgresql://testuser:testpassword@localhost:5432/testdb'
        run: npm test
